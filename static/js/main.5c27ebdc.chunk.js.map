{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","servises/fetch-api.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","App.js","index.js","components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","search","setSearch","className","s","searchbar","e","preventDefault","searchForm","type","searchFormButton","searchFormButtonLabel","onChange","value","target","searchFormInput","autoComplete","autoFocus","placeholder","ImageGalleryItem","image","alt","largeImage","onClick","imageGalleryItem","src","Button","button","api","fetchData","searchImages","currentPage","url","fetch","then","res","json","ImageGallery","openModal","images","setImages","totalPage","setTotalPage","setCurrentPage","status","setStatus","useEffect","imageAPI","hits","total","finally","remainingPages","question","color","height","width","imageGallery","map","id","webformatURL","tags","largeImageURL","modalRoot","document","querySelector","Modal","onClose","children","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","overlay","currentTarget","modal","App","setSearchImages","showModal","setShowModal","selectedlargeImg","setSelectedlargeImg","selectedAltImg","setSelectedAltImg","toggleModal","img","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5c27ebdc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__3aHbO\",\"imageGalleryItem-image\":\"ImageGalleryItem_imageGalleryItem-image__31wbe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__1joNW\",\"modal\":\"Modal_modal__1aWyG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__geoE_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__l18Vt\",\"searchForm\":\"Searchbar_searchForm__3ckVt\",\"searchFormButton\":\"Searchbar_searchFormButton__1U_ep\",\"searchFormButtonLabel\":\"Searchbar_searchFormButtonLabel__3ooFb\",\"searchFormInput\":\"Searchbar_searchFormInput__3ExMh\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Searchbar.module.css';\r\n\r\nconst Searchbar = ({ onSubmit }) => {\r\n  const [search, setSearch] = useState('');\r\n\r\n  const handlerInputChange = (e) => {\r\n    const { value } = e.target;\r\n    setSearch(value);\r\n  };\r\n  const handlerSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(search);\r\n    setSearch('');\r\n  };\r\n\r\n  return (\r\n    <header className={s.searchbar}>\r\n      <form onSubmit={handlerSubmit} className={s.searchForm}>\r\n        <button type=\"submit\" className={s.searchFormButton}>\r\n          <span className={s.searchFormButtonLabel}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          onChange={handlerInputChange}\r\n          className={s.searchFormInput}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          value={search}\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\nexport default Searchbar;\r\n\r\nSearchbar.propTypes = {\r\n  Searchbar: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\nexport default function ImageGalleryItem({ image, alt, largeImage, onClick }) {\r\n  return (\r\n    <li className={s.imageGalleryItem} onClick={() => onClick(largeImage, alt)}>\r\n      <img src={image} alt={alt} className={s.imageGalleryItem-image} />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.string.isRequired,\r\n  alt: PropTypes.string,\r\n  largeImage: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" className={s.button} onClick={onClick}>\r\n      Load More\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","const API_KEY = '18602896-269905921176f8eb36b1925d1';\r\nconst BASE_URL = 'https://pixabay.com/api';\r\nfunction fetchData(searchImages, currentPage) {\r\n  const url = `${BASE_URL}/?q=${searchImages}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n  return fetch(url).then((res) => res.json());\r\n}\r\nconst api = { fetchData };\r\nexport default api;\r\n","import { useState, useEffect } from 'react';\r\nimport s from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport Button from '../Button/Button';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport imageAPI from '../../servises/fetch-api';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ImageGallery({ searchImages, openModal }) {\r\n  const [images, setImages] = useState([]);\r\n  const [totalPage, setTotalPage] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [status, setStatus] = useState('idle');\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (prevProps.searchImages !== this.props.searchImages) {\r\n  //     this.setState({ images: [], page: 1 });\r\n  //     this.fetchData();\r\n  //   } else if (prevState.page !== this.state.page) {\r\n  //     this.fetchData();\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    if (!searchImages) {\r\n      return;\r\n    }\r\n    setStatus('pending');\r\n    imageAPI\r\n      .fetchData(searchImages, currentPage)\r\n      .then((res) => {\r\n        setImages((s) => [...s, ...res.hits]);\r\n        setTotalPage(res.total);\r\n      })\r\n      .finally(() => setStatus('resolved'));\r\n  }, [currentPage, searchImages]);\r\n\r\n  const handlerLoadMoreClick = () => {\r\n    setCurrentPage((s) => s + 1);\r\n  };\r\n\r\n  const remainingPages = totalPage - currentPage * 12;\r\n  if (status === 'idle') {\r\n    return <div className={s.question}>Что хотите найти?</div>;\r\n  }\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className=\"spiner\">\r\n        <Loader type=\"ThreeDots\" color=\"#3f51b5\" height={80} width={80} />\r\n      </div>\r\n    );\r\n  }\r\n  if (status === 'resolved') {\r\n    return (\r\n      <>\r\n        <ul className={s.imageGallery}>\r\n          {totalPage !== 0 ? (\r\n            images.map(({ id, webformatURL, tags, largeImageURL }) => (\r\n              <ImageGalleryItem\r\n                key={id}\r\n                image={webformatURL}\r\n                alt={tags}\r\n                largeImage={largeImageURL}\r\n                onClick={openModal}\r\n              />\r\n            ))\r\n          ) : (\r\n            <div>По вашему запросу ничего не найдено!</div>\r\n          )}\r\n        </ul>\r\n        {remainingPages > 0 && <Button onClick={handlerLoadMoreClick} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  searchImages: PropTypes.string.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.css';\r\nconst modalRoot = document.querySelector('#modal-root');\r\nexport default function Modal({ onClose, children }) {\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.code === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [onClose]);\r\n\r\n  const handleBackdropClick = (e) => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.overlay} onClick={handleBackdropClick}>\r\n      <div className={s.modal}>{children}</div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import { useState } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Modal from './components/Modal/Modal';\n\nexport default function App() {\n  const [searchImages, setSearchImages] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [selectedlargeImg, setSelectedlargeImg] = useState('');\n  const [selectedAltImg, setSelectedAltImg] = useState('');\n\n  const toggleModal = (img, alt) => {\n    setShowModal(!showModal);\n    setSelectedlargeImg(img);\n    setSelectedAltImg(alt);\n  };\n\n  \n  return (\n    <>\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <img src={selectedlargeImg} alt={selectedAltImg} />\n        </Modal>\n      )}\n      <Searchbar onSubmit={setSearchImages} />\n      <ImageGallery searchImages={searchImages} openModal={toggleModal} />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__36CRY\",\"question\":\"ImageGallery_question__1cJ_g\"};"],"sourceRoot":""}